#include <stdio.h>
#include <malloc.h>
#define Spec 5 
void main()
{
	int input_count[100] = { 0 };	// 입고
	int buy_count[100] = { 0 };		// 판매
	int save_count[100] = { 0 };	//재고

	int N = 5;				//몇개의 상품을 지정
	int ID = 0;				//상품 ID
	int total_input = 0;	// 총 입고 수량
	int total_buy = 0;		// 총 판매 수량
	int temp = 0;			// 임시 변수

	int many_buy = 0;	//많이 판매
	int low_buy = 0;	// 적게 판매
	int low_ID = 0;		// 적게 판 상품
	int many_ID = 0;	// 많이 판 상품

	float buy_rate = 0;		//판매율

	int manual = 0;		// switch문
	int menu = 0;		// case문
	int run = 1;		// 실행 종료
	

	while(run){
		printf("원하는 메뉴를 선택하세요.\n(1.입고 2.판매 3.상품현황 4.종료)\n");
		scanf("%d", &manual);
		switch (manual) {
			case 1:
				printf("\n입고수량 입력(선택)\n1)전체 상품 입고수량 입력\n2)개별 상품 입력\n");
				scanf("%d", &menu);
				switch (menu) {
					case 1:
						printf("\n상품별 입고수량\n입력: ");
						for (int i = 0; i < N; i++) {
							scanf("%d", &temp);
							save_count[i] = save_count[i] + temp;
						}
						break;

					case 2:
						printf("\n상품ID: ");
						scanf("%d", &ID);
						ID = ID - 1;
						printf("입고수량: ");
						scanf("%d", &temp);

						save_count[ID] =save_count[ID] + temp;
						break;
				}
				break;

			case 2:
				printf("\n판매수량 입력(선택)\n1)전체 상품 판매수량 입력\n2)개별 상품 입력\n");
				scanf("%d", &menu);
				switch (menu) {
				case 1:
					printf("\n전체 상품의 판매수량\n입력: ");
					for (int i = 0; i < N; i++) {
						buy_count[i] = (int*)malloc(sizeof(int));
						scanf("%d", &buy_count[i]);
						save_count[i] = save_count[i] - buy_count[i];
					}
					break;
				case 2:
					printf("\n상품ID: ");
					scanf("%d", &ID);
					ID = ID - 1;

					printf("판매수량: ");
					scanf("%d", &temp);

					save_count[ID] = save_count[ID] - temp;
						break;
				}
				break;

			case 3:
				
				printf("\n재고 수량:");
				for (int i = 0; i < N; i++) {
					printf("%d ", save_count[i]);
				}
				for (int i = 0; i < N; i++) { // 전체 판매량 
					total_buy += buy_count[i];
					
					total_input += save_count[i];
				}

				buy_rate = total_buy / (float)(total_input+total_buy) * 100;
				printf("\n총 판매량: %d (판매율 %.2f%%)\n", total_buy, buy_rate);

				many_buy = buy_count[0];
				low_buy = buy_count[0];
				many_ID = 1;
				low_ID = 1;

				for (int i = 0; i < N; i++) {
					if (buy_count[i] > many_buy) {
						many_buy = buy_count[i];
						many_ID = i + 1;
					}
					if (buy_count[i] < low_buy) {
						low_buy = buy_count[i];
						low_ID = i + 1;
					}

				}
				printf("가장 많이 판매된 상품: ID %d 판매량 %d\n", many_ID, many_buy);
				printf("가장 적게 판매된 상품: ID %d 판매량 %d\n", low_ID, low_buy);


				for (int i = 0; i < N; i++) {
					if (save_count[i] <= 2) {
						printf("상품 ID %d : 재고부족(%d)\n", i + 1, save_count[i]);
					}
				}
				break;
	
			case 4:
				printf("프로그램을 종료 합니다.\n");
				run = 0;
				break;
		}
	}
}
